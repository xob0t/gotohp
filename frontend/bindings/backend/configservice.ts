// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

export function AddCredentials(newAuthString: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4112064016, newAuthString) as any;
    return $resultPromise;
}

export function GetConfig(): Promise<$models.GlobalSettings> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2320765359) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType0($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function RemoveCredentials(email: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4137237855, email) as any;
    return $resultPromise;
}

export function SetDeleteFromHost(deleteFromHost: boolean): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2373131628, deleteFromHost) as any;
    return $resultPromise;
}

export function SetDisableUnsupportedFilesFilter(disableUnsupportedFilesFilter: boolean): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4257123739, disableUnsupportedFilesFilter) as any;
    return $resultPromise;
}

export function SetForceUpload(forceUpload: boolean): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4251250465, forceUpload) as any;
    return $resultPromise;
}

export function SetProxy(proxy: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2108748199, proxy) as any;
    return $resultPromise;
}

export function SetRecursive(recursive: boolean): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3531888315, recursive) as any;
    return $resultPromise;
}

export function SetSaver(saver: boolean): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3363899554, saver) as any;
    return $resultPromise;
}

export function SetSelected(email: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4003107648, email) as any;
    return $resultPromise;
}

export function SetUploadThreads(uploadThreads: number): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2611642865, uploadThreads) as any;
    return $resultPromise;
}

export function SetUseQuota(useQuota: boolean): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3225773856, useQuota) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = $models.GlobalSettings.createFrom;
